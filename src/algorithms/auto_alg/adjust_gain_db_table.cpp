
#include "stdafx.h"
#include "adjust_gain_db_table.h"

/* code used to generate this table :
	auto f = fopen( "t.txt", "wb" );
	unsigned int dist_mid = 100;
	for( unsigned int dist = 1; dist < 1000; ++dist )
	{
		float val = log( dist / (float) dist_mid ) / log( 2.0f );
		int k = (int)( val * 301.f);
		fprintf( f, "%5d,", k );
		if( (dist % 10) == 0 )
			fprintf( f, "\n" );
	}
	fclose( f );
*/

// values are in the range of [-2000;1000[ so we can use some smaller type then int to reduce space taken up by this table
static short table[1000] = {
	-2000, // entry for dist == 0, we ignore the repercussions of having a dumb value here
	-1999,-1698,-1522,-1397,-1300,-1221,-1154,-1096,-1045, -999,
	-958, -920, -885, -853, -823, -795, -769, -744, -721, -698,
	-677, -657, -638, -619, -602, -584, -568, -552, -537, -522,
	-508, -494, -481, -468, -455, -443, -431, -420, -408, -397,
	-387, -376, -366, -356, -346, -337, -327, -318, -309, -301,
	-292, -283, -275, -267, -259, -251, -244, -236, -229, -221,
	-214, -207, -200, -193, -187, -180, -173, -167, -161, -154,
	-148, -142, -136, -130, -124, -119, -113, -107, -102,  -96,
	-91,  -86,  -80,  -75,  -70,  -65,  -60,  -55,  -50,  -45,
	-40,  -36,  -31,  -26,  -22,  -17,  -13,   -8,   -4,    0, // 100
	4,    8,   12,   17,   21,   25,   29,   33,   37,   41,
	45,   49,   53,   56,   60,   64,   68,   71,   75,   79,
	82,   86,   89,   93,   96,  100,  103,  107,  110,  113,
	117,  120,  123,  127,  130,  133,  136,  139,  143,  146,
	149,  152,  155,  158,  161,  164,  167,  170,  173,  176,
	178,  181,  184,  187,  190,  193,  195,  198,  201,  204,
	206,  209,  212,  214,  217,  220,  222,  225,  227,  230,
	232,  235,  238,  240,  243,  245,  247,  250,  252,  255,
	257,  260,  262,  264,  267,  269,  271,  274,  276,  278,
	281,  283,  285,  287,  290,  292,  294,  296,  298,  301,
	303,  305,  307,  309,  311,  313,  315,  318,  320,  322,
	324,  326,  328,  330,  332,  334,  336,  338,  340,  342,
	344,  346,  348,  350,  352,  354,  355,  357,  359,  361,
	363,  365,  367,  369,  371,  372,  374,  376,  378,  380,
	381,  383,  385,  387,  389,  390,  392,  394,  396,  397,
	399,  401,  403,  404,  406,  408,  409,  411,  413,  414,
	416,  418,  419,  421,  423,  424,  426,  428,  429,  431,
	432,  434,  436,  437,  439,  440,  442,  444,  445,  447,
	448,  450,  451,  453,  454,  456,  457,  459,  460,  462,
	463,  465,  466,  468,  469,  471,  472,  474,  475,  477,
	478,  479,  481,  482,  484,  485,  487,  488,  489,  491,
	492,  494,  495,  496,  498,  499,  501,  502,  503,  505,
	506,  507,  509,  510,  511,  513,  514,  515,  517,  518,
	519,  521,  522,  523,  524,  526,  527,  528,  530,  531,
	532,  533,  535,  536,  537,  539,  540,  541,  542,  544,
	545,  546,  547,  548,  550,  551,  552,  553,  555,  556,
	557,  558,  559,  561,  562,  563,  564,  565,  566,  568,
	569,  570,  571,  572,  573,  575,  576,  577,  578,  579,
	580,  582,  583,  584,  585,  586,  587,  588,  589,  591,
	592,  593,  594,  595,  596,  597,  598,  599,  600,  602,
	603,  604,  605,  606,  607,  608,  609,  610,  611,  612,
	613,  614,  615,  616,  617,  619,  620,  621,  622,  623,
	624,  625,  626,  627,  628,  629,  630,  631,  632,  633,
	634,  635,  636,  637,  638,  639,  640,  641,  642,  643,
	644,  645,  646,  647,  648,  649,  650,  651,  652,  653,
	654,  655,  656,  656,  657,  658,  659,  660,  661,  662,
	663,  664,  665,  666,  667,  668,  669,  670,  671,  672,
	672,  673,  674,  675,  676,  677,  678,  679,  680,  681,
	682,  682,  683,  684,  685,  686,  687,  688,  689,  690,
	691,  691,  692,  693,  694,  695,  696,  697,  698,  698,
	699,  700,  701,  702,  703,  704,  704,  705,  706,  707,
	708,  709,  710,  710,  711,  712,  713,  714,  715,  715,
	716,  717,  718,  719,  720,  720,  721,  722,  723,  724,
	725,  725,  726,  727,  728,  729,  729,  730,  731,  732,
	733,  733,  734,  735,  736,  737,  737,  738,  739,  740,
	741,  741,  742,  743,  744,  745,  745,  746,  747,  748,
	748,  749,  750,  751,  751,  752,  753,  754,  755,  755,
	756,  757,  758,  758,  759,  760,  761,  761,  762,  763,
	764,  764,  765,  766,  767,  767,  768,  769,  770,  770,
	771,  772,  772,  773,  774,  775,  775,  776,  777,  778,
	778,  779,  780,  780,  781,  782,  783,  783,  784,  785,
	785,  786,  787,  788,  788,  789,  790,  790,  791,  792,
	793,  793,  794,  795,  795,  796,  797,  797,  798,  799,
	799,  800,  801,  802,  802,  803,  804,  804,  805,  806,
	806,  807,  808,  808,  809,  810,  810,  811,  812,  812,
	813,  814,  814,  815,  816,  816,  817,  818,  818,  819,
	820,  820,  821,  822,  822,  823,  824,  824,  825,  825,
	826,  827,  827,  828,  829,  829,  830,  831,  831,  832,
	833,  833,  834,  834,  835,  836,  836,  837,  838,  838,
	839,  840,  840,  841,  841,  842,  843,  843,  844,  845,
	845,  846,  846,  847,  848,  848,  849,  849,  850,  851,
	851,  852,  853,  853,  854,  854,  855,  856,  856,  857,
	857,  858,  859,  859,  860,  860,  861,  862,  862,  863,
	863,  864,  865,  865,  866,  866,  867,  867,  868,  869,
	869,  870,  870,  871,  872,  872,  873,  873,  874,  874,
	875,  876,  876,  877,  877,  878,  879,  879,  880,  880,
	881,  881,  882,  883,  883,  884,  884,  885,  885,  886,
	886,  887,  888,  888,  889,  889,  890,  890,  891,  892,
	892,  893,  893,  894,  894,  895,  895,  896,  896,  897,
	898,  898,  899,  899,  900,  900,  901,  901,  902,  903,
	903,  904,  904,  905,  905,  906,  906,  907,  907,  908,
	908,  909,  909,  910,  911,  911,  912,  912,  913,  913,
	914,  914,  915,  915,  916,  916,  917,  917,  918,  918,
	919,  920,  920,  921,  921,  922,  922,  923,  923,  924,
	924,  925,  925,  926,  926,  927,  927,  928,  928,  929,
	929,  930,  930,  931,  931,  932,  932,  933,  933,  934,
	934,  935,  935,  936,  936,  937,  937,  938,  938,  939,
	939,  940,  940,  941,  941,  942,  942,  943,  943,  944,
	944,  945,  945,  946,  946,  947,  947,  948,  948,  949,
	949,  950,  950,  951,  951,  952,  952,  953,  953,  954,
	954,  955,  955,  956,  956,  957,  957,  957,  958,  958,
	959,  959,  960,  960,  961,  961,  962,  962,  963,  963,
	964,  964,  965,  965,  966,  966,  966,  967,  967,  968,
	968,  969,  969,  970,  970,  971,  971,  972,  972,  973,
	973,  973,  974,  974,  975,  975,  976,  976,  977,  977,
	978,  978,  978,  979,  979,  980,  980,  981,  981,  982,
	982,  983,  983,  983,  984,  984,  985,  985,  986,  986,
	987,  987,  988,  988,  988,  989,  989,  990,  990,  991,
	991,  992,  992,  992,  993,  993,  994,  994,  995,  995,
	995,  996,  996,  997,  997,  998,  998,  999,  999,
};

int adjust_gain_db( unsigned int dist )
{
	const int table_size = sizeof( table ) / sizeof( table[0] );
	if( dist < table_size )
		return table[dist];
	return table[table_size - 1];
}
